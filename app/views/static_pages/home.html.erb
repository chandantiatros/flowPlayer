<!DOCTYPE html>
<h1>StaticPages#home</h1>
<p>Find me in app/views/static_pages/home.html.erb</p>
<head>
<!-- 1. skin -->
<link rel="stylesheet" href="//releases.flowplayer.org/5.5.0/skin/minimalist.css">
 
<!-- 2. jquery library -->
<script src="//code.jquery.com/jquery-1.11.0.min.js"></script>
 
<!-- 3. flowplayer -->
<script src="//releases.flowplayer.org/5.5.0/flowplayer.min.js"></script>

<style>

#manual {
  background-color: #333;
}
#auto {
  background-color: #ccc;
}
 
/* manual quality selection widget */
.flowplayer .fp-qsel {
  position: absolute;
  top: 40px;
  right: 5px;
}
.flowplayer.is-mouseout .fp-qsel {
  opacity: 0;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=0);
  /* same transition as other ui elements like fullscreen */
  -webkit-transition: opacity .15s .3s;
  -moz-transition: opacity .15s .3s;
  transition: opacity .15s .3s;
}
.flowplayer.is-mouseover .fp-qsel {
  opacity: 1;
  filter: progid:DXImageTransform.Microsoft.Alpha(Opacity=100);
}
/* hide selector in splash state */
.flowplayer.is-splash .fp-qsel {
  display: none;
}
 
/* buttons */
.flowplayer .fp-qsel div {
  padding: 0.5ex;
  margin: 0 0.5ex 1ex 0;
  font-weight: bold;
  font-size: 90%;
  color: #080808;
  background-color: #eee;
  background-color: rgba(238, 238, 238, 0.8);
  cursor: pointer;
  -webkit-border-radius: 1ex;
  -moz-border-radius: 1ex;
  border-radius: 1ex;
}
.flowplayer.is-fullscreen .fp-qsel div {
  font-size: 100%;
}
.flowplayer .fp-qsel div.fp-selectedres {
  color: #00a7c8;
  background-color: #333;
  background-color: rgba(51, 51, 51, 0.6);
  cursor: default;
}
</style>
<script type="text/javascript">
flowplayer.conf.rtmp = "rtmp://s3b78u0kbtx79q.cloudfront.net/cfx/st";
 
flowplayer(function (api, root) {
  // check whether hls will be picked by the flowplayer engine
  var hls = flowplayer.support.video && api.conf.engine === "html5" &&
          !!$("<video/>")[0].canPlayType("application/x-mpegurl").replace("no", ""),
      qsel,
      selected = "fp-selectedres",
 
      // for demo info, not in production:
      playerindex = $(".flowplayer").index(root),
      srcinfo = $(".clip").eq(playerindex),
      resinfo = $(".res").eq(playerindex);
 
  // manual selection
  if (api.conf.resolutions !== undefined && flowplayer.support.inlineVideo && !hls) {
 
    // create the manual quality selection widget and append it to the UI
    qsel = $("<div/>").addClass("fp-qsel").appendTo(".fp-ui", root);
 
    $.each(api.conf.resolutions, function (i, resolution) {
      // generate a selector button for each resolution
 
      $("<div/>").addClass(resolution.isDefault ? "fp-defaultres " + selected : "")
        .text(resolution.label)
        .click(function() {
          if (!$(this).hasClass(selected)) {
            var buttons = $("div", qsel),
                // store current position
                pos = api.ready && !api.finished ? api.video.time : 0;
 
            api.load(resolution.sources, function (e, api) {
              // seek to stored position
              if (pos) {
                api.seek(pos);
              }
            });
 
            buttons.each(function () {
              $(this).toggleClass(selected, buttons.index(this) === i);
            });
          }
        }).appendTo(qsel);
    });
 
    api.bind("unload", function () {
      // highlight default resolution
      $("div", qsel).each(function () {
        var button = $(this);
 
        button.toggleClass(selected, button.hasClass("fp-defaultres"));
      });
    });
  }
 

  // report current src and resolution for demonstratation purposes
  api.bind("ready", function(e, api, video) {
    srcinfo.text(video.src);
    if (video.type != "mpegurl") {
      resinfo.text("resolution: " + video.width + "x" + video.height);
    } else {
      resinfo.text("automatic choice of resolution");
    }
  }).bind("unload", function () {
    // reinsert non-breakable space
    srcinfo.text("\u00A0");
    resinfo.text("\u00A0");
  });
});
 
// install players when document is ready
$(function () {
  var cdn = "http://download.ted.com/talks/",
      // filename label for automatic selection
      // depending on device capabilities
      label = !flowplayer.support.inlineVideo ? "-216p" : (flowplayer.support.touch ? "" : "-720p"),
      defaultresolutionindex = 0,
      // the resolutions offered for manual selection in the first player
      resolutions = [{
        label: "260p",
        // default sources should be compatible with all platforms and browsers
        // they are also the ones which are offered for embedding
        // we only need the hls source in the default and lofi resolutions
        isDefault: true,
        sources: [
          
          { mp4:     cdn + "SergeyBrin_2013-320k.mp4" }
          
        ]
      }, {
        // will be the only offer on devices not supportin inline video playback
        label: "160p",
        lofi: true,
        sources: [
          
          { mp4:     cdn + "SergeyBrin_2013-320k.mp4" }
          
        ]
      }],
      hdresolutions = [{
        label: "800p",
        sources: [
          
          { mp4:     cdn + "SergeyBrin_2013-320k.mp4" }
          
        ]
      }, {
        label: "530p",
        sources: [
          
          { mp4:     cdn + "SergeyBrin_2013-320k.mp4" }
          
        ]
      }];
 
  // offer hd resolutions in desktop browsers
  if (!flowplayer.support.touch) {
    resolutions = hdresolutions.concat(resolutions);
  }
 
  // set default resolution index depending on capabilities
  $.each(resolutions, function (i, resolution) {
    if (flowplayer.support.inlineVideo && resolution.isDefault ||
        !flowplayer.support.inlineVideo && resolution.lofi) {
      defaultresolutionindex = i;
      return false;
    }
  });
 
  // install the player with manual selection
  $("#manual").flowplayer({
    ratio: 5/12,
    resolutions: resolutions,
    playlist: [resolutions[defaultresolutionindex].sources]
  });
 
  // install the player with automatic selection
  $("#auto").flowplayer({
    ratio: 9/16,
    embed: false,
    playlist: [[
      
      { mp4:     cdn + "drive" + label + ".mp4" }
      
    ]]
  });
});
</script>
</head>
<body>
<div id="manual" class="flowplayer is-splash is-paused is-mouseout">
  <!-- ... -->
  <div class="fp-ui">
    <!-- [...] -->
    <div class="fp-qsel">
      <div>800p</div>
      <div>530p</div>
      <div class="fp-selectedres fp-defaultres">260p</div>
      <div>216p</div>
    </div>
  </div>
  <!-- ... -->
</div>
</body>
</html>
